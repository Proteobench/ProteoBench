Parameter	AlphaDIA	AlphaPept	DIA-NN	FragPipe	MSAID*	MSAngel	MaxQuant	PEAKS	ProlineStudio	QuantMS	Sage	Spectronaut	Wombat	i2MassChroQ
allowed_miscleavages	**missed_cleavages** setting in **library_prediction** section of the config	**n_missed_cleavages** in **fasta** section of the config	No --cfg: value set for **--missed-cleavages**<br>--cfg: parsed from line **Maximum number of missed cleavages set to X**	Parsed from msfragger.allowed_missed_cleavage_1	Parsed from **Max. Missed Cleavage Sites**	Parsed from **PFA** in the **paramMap** section if Mascot is used<br>Parsed from **nMissedCleavages** in **digestionParameters** in the **paramMap** section if X!Tandem is used	Parsed from **maxMissedCleavages**	Parsed from line **Max Missed Cleavage: X**	Parsed from **max_missed_cleavages** on **Search settings and infos** sheet	Parsed from **allowed_missed_cleavages** from the json file	Parsed from **missed_cleavages** in the **database[enzyme]** section in the config	Parsed from line **Missed Cleavages: X**	Parsed from **miscleavages**	Parsed from either **sage_database_enzyme_missed_cleavages** or **scoring, maximum missed cleavage sites**,<br> depending on search engine used
enable_match_between_runs	Set to true if MBR step enabled, else False	True if **match** is enabled in **workflow** section of the config, else False	No --cfg: True if **--reanalyse** is set, else false<br>--cfg: True if **reanalyse them** (version <1.8) or **MBR enabled** (version >1.8) is mentioned	If not DIA-NN quant, parsed from **ionquant.mbr**<br>if DIA-NN quant, parsed by checking if **--reanalyse** is present in diann.fragpipe.cmd-opts	True if **Quan in all file** or **MBR** is found in **quantification_method**	True (fixed)	Parsed from **matchBetweenRuns**	Parsed from line **Match Between Run: X**	Set to true if **cross assignment** is present in the rows of the **Quant config** sheet, else False	Not parsed	True (fixed)	False (fixed)	Parsed from **enable_match_between_runs**	Parsed from **mcq_mbr**
enzyme	**enzyme** setting in **library_prediction** section of the config	**protease** in **fasta** section of the config	No --cfg: value set for **--cut**<br>--cfg: parsed from line **In silico digest will involve cuts at X but excluding cuts at X**	Parsed from msfragger.search_enzyme_name_1 and msfragger.search_enzyme_name_2	Parsed from **Enzyme**	Parsed from **CLE** in the **paramMap** section if Mascot is used<br>Parsed from **enzymes** in **digestionParameters** in the **paramMap** section if X!Tandem is used	Parsed from **\<enzymes>\<string\>**	Parsed from line **Enzyme: X**	Parsed from **enzymes** on **Search settings and infos** sheet	Parsed from **enzyme** from the json file	Parsed from **cleave_at** and **restrict** in the **database[enzyme]** section in the config	Parsed from line **Enzymes / Cleavage Rules: X**	Parsed from **enzyme**	If Sage is used: parsed from **sage_database_enzyme_cleave_at**, **sage_data_enzyme_restrict**, **sage_database_enzyme_c_terminal**<br>if X!Tandem is used: parsed from **protein, cleavage site**
fixed_mods	**fixed_modifications** setting in **library_prediction** section of the config	**mods_fixed** & **mods_fixed_terminal** & **mods_fixed_terminal_prot** in **fasta** section of the config	No --cfg: value set for **--mod**<br>--cfg: parsed from the lines **X enabled as a fixed modification** and **Modification X with mass<br> delta X at X will be considered as fixed	Parsed from msfragger.table.fix-mods	Parsed from **Static Modifications**	Parsed from **MODS** in the **paramMap** section if Masscot is used<br>Parsed from **fixedModifications** in **modificationParameters** in the **paramMap** section if X!Tandem is used	Parsed from **fixedModifications**	Parsed as the elements between **Fixed Modifications:** and **Variable Modifications**	Parsed from **fixed_ptms** on **Search settings and infos** sheet	Parsed from **fixed_mods** from the json file	Parsed from **static_mods** in the **database** section in the config	Parsed from line **Fixed Modifications: X**	Parsed from **fixed_mods**	Parsed from either **sage_database_static_mods or **residue, modification mass**, depending on search engine used
fragment_mass_tolerance	**target_ms2_tolerance** setting in **search** section of the config	**frag_tol** in **search** section of the config	Value set for **--mass-acc**. If this parameter is not set, it means tolerance optimization will<br> be performed. In that case, as well as if --cfg is set, the value will be parsed from line <br>**Optimised mass accuracy: X ppm**	Parsed from msfragger.fragment_mass_tolerance	Parsed from **Fragment Mass Tolerance**	Not parsed if Mascot is used<br>Parsed from **fragmentIonMZTolerance** and **fragmentAccuraccyType**  in the **paramMap** section if X!Tandem is used	Parsed from **MatchTolerance**	Parsed from line **Fragment Mass Error Tolerance: X**	Parsed from **fragment_mass_error_tolerance** on **Search settings and infos** sheet	Parsed from **fragment_mass_tolerance** from the json file	Parsed from **fragment_tol**	Set to **Dynamic**, if the calibration method is set to **Dynamic**<br>If the calibration method is set to **Static** or **Relative**, tolerances are extracted from line **MS2 Tolerance: X**, with Th or ppm units, respectively	Parsed from **fragment_mass_tolerance**	Parsed from either **sage_fragment_tol** or **spectrum, fragment monoisotopic mass error minus/plus**,<br> depending on search engine used
ident_fdr_peptide	Not parsed as not an option	Not parsed as not an option	Not parsed as not an option	If not DIA-NN quant, parsed from **phi-report.filter**<br>if DIA-NN quant, not parsed	0.01 (fixed)	Not parsed	Not parsed	Parsed from line **Peptide FDR: X**	Not parsed	Not parsed	Not parsed	Not parsed	Parsed from **ident_fdr_peptide**	Parsed from **peptide_fdr**
ident_fdr_protein	**fdr** setting in **fdr** section of the config	**protein_fdr** in **search** section of the config	Not parsed as not an option	If not DIA-NN quant, parsed from **phi-report.filter**<br>if DIA-NN quant, parsed from **diann.q-value**	0.01 (fixed)	Not parsed	Parsed from **proteinFdr**	Parsed from line **Protein Group FDR: X**	Not parsed	Parsed from **protein_level_fdr_cutoff** from the json file	Not parsed	Parsed from line **Protein Qvalue Cutoff: X**	Parsed from **ident_fdr_protein**	Parsed from **protein_fdr**
ident_fdr_psm	**fdr** setting in **fdr** section of the config	**peptide_fdr** in **search** section of the config	No --cfg: value set for **--qvalue**<br>--cfg: parsed from line **Output will be filtered at X FDR**	If not DIA-NN quant, parsed from **phi-report.filter**<br>if DIA-NN quant, parsed from **diann.q-value**	0.01 (fixed)	Parsed from **psmExpectedFdr**	Parsed from **peptideFdr***	Parsed from either **PSM FDR: X** or **Precusor FDR: X**	Parsed from **psm_filter_expected_fdr** on **Import and filters** sheet	Parsed from **psm_level_fdr_cutoff** from the json file	Not parsed	Parsed from line **Precursor Qvalue Cutoff: X**	Parsed from **ident_fdr_psm**	Parsed from **psm_fdr**
max_fragment_mz	Maximum value in **fragment_mz** setting in **library_prediction** section of the config		No --cfg: value set for **max-fr-mz** (if not provided, default = 1800) <br>--cfg: parsed from line **Min fragment m/z set to X**	Not parsed	Not parsed		Not parsed	Parsed from line **Fragment M/Z between:** (DIA)				Not parsed		
max_mods	**max_var_mod_num** setting in **library_prediction** section of the config	**n_modifications_max** in **fasta** section of the config	No --cfg: value set for **var-mods**<br>--cfg: parsed from line **Maximum number of variable modifications set to X**	Parsed from msfragger.max_variable_mods_per_peptide	Parsed from **Maximum Number of Modifications**	Not parsed	Parsed from **maxNmods**	Parsed from line **Max Variable PTM per Peptide: X**	Not parsed	Parsed from **max_mods** from the json file	Parsed from **max_variable_mods** in the **database** section in the config	Parsed from line **Max Variable Modifiations: X**	Parsed from **max_mods**	Not parsed if X!Tandem is used <br> parsed from **sage_database_max_variable_mods** if Sage is used
max_peptide_length	Maximum value in **precursor_len** setting in **library_prediction** section of the config	**pep_length_max** in **fasta** section of the config	No --cfg: value set for **--max-pep-len** (if not provided, default = 30)<br>--cfg: parsed from the line **Max peptide length set to X**	Parsed from msfragger.digest_max_length	Parsed from **Max. Peptide Length**	Not parsed	Not parsed if not DIA, otherwise parsed from **maxPeptideLengthForUnspecificSearch**	Parsed from line **Peptide Length between: X** or **Peptide Length Range: X**	Not parsed	Parsed from **max_peptide_length** from the json file	Parsed from **max_len** in the **database[enzyme]** section in the config	Parsed from line **Max Peptide Length: X**	Parsed from **max_peptide_length**	Not parsed if X!Tandem is used <br> parsed from **sage_database_enzyme_max_len** if Sage is used
max_precursor_charge	Maximum value in **precursor_charge** setting in **library_prediction** section of the config	**iso_charge_max** in **features** section of the config	No --cfg: value set for **max-pr-charge** (if not provided, default = 4) <br>--cfg: parsed from line **Max precursor charge set to X**	FragPipe uses charge state information from data, if present. <br>So this value is set to None by default, but overwritten using **msfragger.misc.fragger.precursor-charge-lo** if **msfragger.override_charge** is set to True	Parsed from **Max. Peptide Charge**	Not parsed	Parsed from **maxCharge**	Parsed from line **Precursor Charge between: X** or **Precursors Charge between: X**	Parsed as the maximal charge state found in **peptide_charge_states** on **Search settings and infos** sheet	Parsed from **max_precursor_charge** from the json file	Parsed as last value from **precursor_charge** list	If Peptide Charge is set to False, not parsed<br>If not, parsed from line **Peptide Charge: X**	Parsed from **max_precursor_charge**	Parsed from either **sage_precursor_charge** or **spectrum, maximum parent charge**, depending on search engine used
max_precursor_mz	Maximum value in **precursor_mz** setting in **library_prediction** section of the config		No --cfg: value set for **max-pr-mz** (if not provided, default = 1800) <br>--cfg: parsed from line **Max precursor m/z set to X**	Calculated by dividing the maximum peptide mass set for digestion (**msfragger.misc.fragger.digest-mass-hi**) by the minimum precursor charge	Not parsed		Calculated by dividing the maximum peptide mass set (**maxPeptideMass**) by the minimum precursor charge	Parsed from line **Precursor M/Z between:** (DIA)				Not parsed		
min_fragment_mz	Minimum value in **fragment_mz** setting in **library_prediction** section of the config		No --cfg: value set for **min-fr-mz** (if not provided, default = 200) <br>--cfg: parsed from line **Min fragment m/z set to X**	Not parsed	Not parsed		Not parsed	Parsed from line **Fragment M/Z between:** (DIA)				Not parsed		
min_peptide_length	Minimum value in **precursor_len** setting in **library_prediction** section of the config	**pep_length_min** in **fasta** section of  the config	No --cfg: value set for **--min-pep-len** (if not provided, default = 7)<br>--cfg: parsed from the line **Min peptide length set to X**	Parsed from msfragger.digest_min_length	Parsed from **Min. Peptide Length**	Not parsed	Parsed from **minPepLen** (version < 2.6) or **minPeptideLength** (version >= 2.6)	Parsed from line **Peptide Length between: X** or **Peptide Length Range: X**	Parsed from **psm_filter_2** on **Import and filters** sheet	Parsed from **min_peptide_length** from the json file	Parsed from **min_len** in the **database[enzyme]** section in the config	Parsed from line **Min Peptide Length: X**	Parsed from **min_peptide_length**	Not parsed if X!Tandem is used <br> parsed from **sage_database_enzyme_min_len** if Sage is used
min_precursor_charge	Minimum value in **precursor_charge** setting in **library_prediction** section of the config	**iso_charge_min** in **features** section of the config	No --cfg: value set for **min-pr-charge** (if not provided, default = 1) <br>--cfg: parsed from line **Min precursor charge set to X**	FragPipe uses charge state information from data, if present. <br>So this value is set to 1 by default, but overwritten using **msfragger.misc.fragger.precursor-charge-lo** if **msfragger.override_charge** is set to True	Parsed from **Min. Peptide Charge**	Not parsed	Not parsed	Parsed from line **Precursor Charge between: X** or **Precursors Charge between: X**	Parsed as the minimal charge state found in **peptide_charge_states** on **Search settings and infos** sheet	Parsed from **min_precursor_charge** from the json file	Parsed as first value from **precursor_charge** list	If Peptide Charge is set to False, not parsed<br>If not, parsed from line **Peptide Charge: X**	Parsed from **min_precursor_charge**	Not parsed if X!Tandem is used <br> parsed from **sage_precursor_charge** if Sage is used
min_precursor_mz	Minimum value in **precursor_mz** setting in **library_prediction** section of the config		No --cfg: value set for **min-pr-mz** (if not provided, default = 300) <br>--cfg: parsed from line **Min precursor m/z set to X**	Calculated by dividing the minimum peptide mass set for digestion (**msfragger.misc.fragger.digest-mass-lo**) by the maximum precursor charge	Not parsed		Not parsed	Parsed from line **Precursor M/Z between:** (DIA)				Not parsed		
precursor_mass_tolerance	**target_ms1_tolerance** setting in **search** section of the config	**prec_tol** in **search** section of the config	Value set for **--mass-acc-ms1**. If this parameter is not set, it means tolerance optimization<br>will be performed. In that case,as well as if --cfg is set, the value will be parsed from the first<br> occurence of the line **Recommended MS1 mass accuracy setting: X ppm**	Parsed from msfragger.precursor_mass_lower and msfragger.precursor_mass_upper	Not parsed	Parsed from **TOL** and **TOLU** in the **paramMap** section if Mascot is used<br> Parsed from **precursorTolerance** and **precursorAccuracyType** in the **paramMap** section if X!Tandem is used	Parsed from **mainSearchTol**	Parsed from line **Precursor Mass Error Tolerance: X**	Parsed from **peptide_mass_error_tolerance** on **Search settings and infos** sheet	Parsed from **precursor_mass_tolerance** from the json file	Parsed from **precursor_tol**	Set to **Dynamic**, if the calibration method is set to **Dynamic**<br>If the calibration method is set to **Static** or **Relative**, tolerances are extracted from line **MS1 Tolerance: X**, with Th or ppm units, respectively	Parsed from **precursor_mass_tolerance**	Parsed from either **sage_precursor_tol** or **spectrum, parent monoisotopic mass error minus/plus**,<br> depending on search engine used
predictors_library	AlphaPeptDeep (fixed)	Not parsed as not applicable	No --cfg: either **DIA-NN** if **--predictor** is set, or **User defined** if **--lib** is set to a path	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed
protein_inference	**inference_strategy** in **fdr** section of the config	Not parsed	No --cfg: value set for **--pg-level** or **no-prot-inf**, with the mapping {**0**: **Isoforms**, **1**: **Protein_names**, **2**: **Genes**}<br>--cfg: parsed from line **Implicit protein grouping: X**	Parsed from protein-prophet.cmd-opts	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Parsed from **protein_inference_method** from the json file	Not parsed	Parsed from line **Inference Algorithm: X**	Not parsed	Not parsed
quantification_method	DirectLFQ (fixed)	Not parsed	No --cfg: either **Legacy** (if --direct-quant set), **QuantUMS high-accuracy if --high-acc set<br>or **QuantUMS high-precision (default)<br>--cfg: parsed from line **X quantification mode**	If not DIA-NN quant, not parsed (TODO)<br>if DIA-NN quant, parsed from **diann.quantification-strategy**	Parsed from **Quantification Type**	Not parsed	Not parsed	Parsed from line **LFQ Method: X**	Not parsed	Parsed from **quantification_method** from the json file	Not parsed	Parsed from line **Quantity MS Level: X**	Not parsed	Not parsed
scan_window	Not parsed	Not parsed	Parsed from line **Scan window radius set to X**	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Not parsed	Parsed from line **Cross-Run Normalization: X**	Not parsed	Not parsed
search_engine	AlphaDIA (fixed)	AlphaPept (fixed)	DIA-NN (fixed)	MSFragger (fixed)	Parsed from **Algorithm**	Parsed from **searchEnginesWithForms**	Andromeda (fixed)	PEAKS (fixed)	Parsed from **software_name** on **Search settings and infos** sheet	Parsed as a list of all the search engines found under the keys in the yml file that start with **SEARCHENGINE**	Sage (fixed)	Spectronaut (fixed)	various (fixed)	Parsed from **AnalysisSoftware_name**
search_engine_version	Not parsed as no difference with software_version	**version** in **summary** section of the config	Parsed from log file header	Parsed either from header or from MSFragger binary path	Parsed from **Algorithm**	Not parsed	Not parsed	Parsed from line **PEAKS Version: X**	Parsed from **software_version** on **Search settings and infos** sheet	Parsed as a list of the versions of all the search engines under the keys in the yml file that start with **SEARCHENGINE**	Parsed from **version**	Parsed from first line	Not parsed	Parsed from **AnalysisSoftware_version**
software_name	AlphaDIA (fixed)	AlphaPept (fixed)	DIA-NN (fixed)	Either FragPipe or FragPipe (DIA-NN quant), depending on input	MSAID (default)	MSAngel (fixed)	MaxQuant (fixed)	PEAKS (fixed)	ProlineStudio (fixed)	quantms (fixed)	Sage (fixed)	Spectronaut (fixed)	Wombat (fixed)	i2MassChroQ (fixed)
software_version	Parsed from log file header	**version** in **summary** section of the config	Parsed from log file header	Parsed from header	Not parsed	Parsed from **msAngelVersion**	Parsed from **maxQuantVersion**	Parsed from line **PEAKS Version: X**	If there is a **Dataset statistics and infos** sheet, it is parsed from **version**, otherwise not parsed	Parsed as the bigbio or nf-core/quantms version from the yml file	Parsed from **version**	Parsed from first line	Parsed from **version**	Parsed from **i2MassChroQ_VERSION**
variable_mods	**variable_modifications** setting in **library_prediction** section of the config	**mods_variable** & **mods_variable_terminal** & **mods_variable_terminal_prot** in **fasta** section of the config	No --cfg: value set for **--var-mod**<br>--cfg: parsed form line **Modification X with mass delta X at X will be considered as variable**	Parsed from msfragger.table.var-mods	Parsed from **Variable Modifications**	Parsed from **IT_MODS** in the **paramMap** section if Masscot is used<br>Parsed from **variableModifications** in **modificationParameters** in the **paramMap** section if X!Tandem is used.<br> Special parsing of the **data** section if proteinQuickAcetyl and/or quickPyrolidone are toggled	Parsed from **variableModifications**	Parsed as the elements between **Variable Modifications:** and **Database:**	Parsed from **variable_ptms** on **Search settings and infos** sheet	Parsed from **variable_mods** from the json file	Parsed from **variable_mods** in the **database** section in the config	Parsed from line **Variable Modifications: X**	Parsed from **variable_mods**	Parsed from either **sage_database_variable_mods** or **residue, potential modification mass**, depending on search engine used
